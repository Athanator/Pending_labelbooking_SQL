SELECT DISTINCT


wpoo.actionno_i,
wh.ac_registr as REG,
wta.action_date,
SUBSTR(wh.ata_chapter,1,2) as ATA,
wh.event_perfno_i as WO,
/*TO_CHAR(wtd.text) Description_text,
TO_CHAR(wta.text) action_text,	*/
p.description,
wpoo.partno as partno_on,
wpoo.serialno as serialno_on,
CASE

WHEN wpoo.partno IS NULL THEN 'Removal Only'

WHEN (SELECT DISTINCT rotables.partno FROM rotables WHERE rotables.partno IN(wpoo.partno, wpoo.partno_off) AND rotables.location = wpoo.ac_position AND rotables.ac_registr = wh.ac_registr AND rotables.date_inst > wh.closing_date) IS NOT NULL THEN 'LB Superseded'
WHEN r_on.locationno_i = -1 AND r_on.ac_registr <> wh.ac_registr THEN 'On Installed on ' || r_on.ac_registr
WHEN r_on.locationno_i = -1 AND r_on.ac_registr =  wh.ac_registr THEN 'On Already Installed'
 WHEN r_on.locationno_i > -1  AND r_on.condition <> 'US' AND r_on.rotable_status <> 0 THEN 'Pend. comp Inspection Records'
WHEN r_on.locationno_i > -1  AND r_on.condition <> 'US' AND r_on.rotable_status = 0 AND r_on.del_date > wta.action_date THEN 'Check counters'
 WHEN r_on.locationno_i > -1  AND r_on.condition <> 'US' AND r_on.rotable_status = 0  AND r_on.del_date <= wta.action_date AND r_on.location = 'TRANSFER' THEN 'Comp on In TRANSFER, cond: ' || r_on.condition
 WHEN r_on.locationno_i > -1  AND r_on.condition <> 'US' AND r_on.rotable_status = 0  AND r_on.del_date <= wta.action_date AND r_on.location <>  'TRANSFER' THEN 'Correctly In Stock, cond: ' || r_on.condition
WHEN r_on.locationno_i > -1  AND r_on.condition = 'US' THEN 'On is US in Stock'
WHEN r_on.locationno_i IS NULL  THEN 'On not in AMOS'
END As comp_on_loc,



CASE
WHEN wpoo.actionno_i IS NULL AND wta.actionno_i IS NOT NULL THEN 'NO'
WHEN wpoo.actionno_i IS NOT NULL AND wpoo.labelno IS NULL THEN 'PENDING'
WHEN wpoo.actionno_i IS NOT NULL AND wpoo.labelno IS NOT NULL THEN 'YES'
END As LB,
      
wpoo.ac_position As FIN,

CASE

WHEN wpoo.partno IS NULL THEN 'Removal Only'
WHEN wpoo.partno_off IS NULL THEN 'Installation Only'

WHEN (SELECT DISTINCT rotables.partno FROM rotables WHERE rotables.partno IN(wpoo.partno, wpoo.partno_off) AND rotables.location = wpoo.ac_position AND rotables.ac_registr = wh.ac_registr AND rotables.date_inst > wh.closing_date) IS NOT NULL THEN 'LB Superseded'

 WHEN r_off.locationno_i = -1 AND r_off.ac_registr =  wh.ac_registr  AND  r_on.locationno_i > -1  AND r_on.condition <> 'US' AND r_off.location = wpoo.ac_position THEN 'Correct match'
WHEN r_off.locationno_i = -1 AND r_off.ac_registr =  wh.ac_registr  AND  r_on.locationno_i > -1  AND r_on.condition <> 'US' AND r_off.location <>  wpoo.ac_position THEN 'To check position'
WHEN r_on.locationno_i > -1 AND r_off.ac_registr =  wh.ac_registr AND r_on.location <> wpoo.ac_position THEN 'LB not possible'
ELSE 'LB not possible'
END As FIN_match,

wpoo.partno_off as partno_off,
wpoo.serialno_off as serialno_off,


CASE
WHEN wpoo.partno_off IS NULL THEN 'Installation Only'

WHEN (SELECT DISTINCT rotables.partno FROM rotables WHERE rotables.partno IN(wpoo.partno, wpoo.partno_off) AND rotables.location = wpoo.ac_position AND rotables.ac_registr = wh.ac_registr AND rotables.date_inst > wh.closing_date) IS NOT NULL THEN 'LB Superseded'
WHEN r_off.locationno_i = -1 AND r_off.ac_registr <> wh.ac_registr THEN 'Off Installed on ' || r_off.ac_registr
WHEN r_off.locationno_i = -1 AND r_off.ac_registr =  wh.ac_registr AND r_off.date_inst > wta.action_date THEN 'Check counters'
WHEN r_off.locationno_i = -1 AND r_off.ac_registr =  wh.ac_registr AND r_off.date_inst <= wta.action_date THEN 'Off correctly Installed'
WHEN r_off.locationno_i > -1  THEN 'In Stock, condition: ' || r_off.condition
WHEN r_off.locationno_i IS NULL  THEN 'Off not in AMOS'
END As comp_off_loc,


wh.closing_date,
dbl.description as TLB,
wpa.wpno_i,
CASE
WHEN wpa.wpno_i IS NOT NULL AND ath.created_date IS NOT NULL THEN TO_CHAR((TO_DATE('31.12.1971' , 'DD.MM.YYYY') + MAX(ath.created_date) OVER(PARTITION BY ath.source_key)  ), 'DD/MM/YYYY')
WHEN wpa.wpno_i IS NOT NULL AND ath.created_date  IS  NULL THEN 'NOT FOUND'
WHEN wpa.wpno_i IS NULL THEN 'N/A'
END as DFP_avail,
SUBSTR(wh.release_station,1,3)  as STA,
(SELECT DISTINCT address.vendor FROM address INNER JOIN org_approval ON address.address_i = org_approval.main_address_i WHERE org_approval.approvalno_i = wh.approvalno_i) As MRO,
(SELECT DISTINCT


LISTAGG(e2.queryno_i, '; ' ON OVERFLOW TRUNCATE WITH COUNT)   WITHIN GROUP (ORDER BY e2.queryno_i)  OVER (PARTITION BY wpoo.event_perfno_i) As prova
 FROM (SELECT DISTINCT e.queryno_i, e.event_perfno_i, tq.status FROM tech_query_ac e INNER JOIN tech_query tq ON tq.queryno_i = e.queryno_i  ) e2 WHERE e2.event_perfno_i = wpoo.event_perfno_i AND e2.status IN(1, 2, 4))  As open_query,

(SELECT DISTINCT


LISTAGG(e2.assigned_to_group, '; ' ON OVERFLOW TRUNCATE WITH COUNT)   WITHIN GROUP (ORDER BY e2.queryno_i)  OVER (PARTITION BY wpoo.event_perfno_i) As prova
 FROM (SELECT DISTINCT e.queryno_i, tqa.event_perfno_i, e.status, e.assigned_to_group FROM tech_query e INNER JOIN tech_query_ac tqa ON tqa.queryno_i = e.queryno_i  ) e2 WHERE e2.event_perfno_i = wpoo.event_perfno_i AND e2.status IN(1, 2, 4)) as assign_group,

(SELECT DISTINCT


LISTAGG(e2.assigned_to, '; ' ON OVERFLOW TRUNCATE WITH COUNT)   WITHIN GROUP (ORDER BY e2.queryno_i)  OVER (PARTITION BY wpoo.event_perfno_i) As prova
 FROM (SELECT DISTINCT e.queryno_i, tqa.event_perfno_i, e.status, e.assigned_to FROM tech_query e INNER JOIN tech_query_ac tqa ON tqa.queryno_i = e.queryno_i  ) e2 WHERE e2.event_perfno_i = wpoo.event_perfno_i AND e2.status IN(1,2,4)) as assign_dep
/*wpoo.created_date,
wpoo.mutator*/


FROM wo_text_action wta

LEFT JOIN wo_part_on_off wpoo ON wpoo.actionno_i = wta.actionno_i
LEFT JOIN wo_header wh ON wpoo.event_perfno_i = wh.event_perfno_i
INNER JOIN workstep_link wl ON wta.workstep_linkno_i = wl.workstep_linkno_i
INNER JOIN wo_text_description wtd ON wl.descno_i = wtd.descno_i
LEFT JOIN db_link dbl ON TO_CHAR(wta.actionno_i) = dbl.source_pk  AND dbl.ref_type = 'TLB'
LEFT JOIN wp_assignment wpa ON wh.event_perfno_i = wpa.event_perfno_i
LEFT JOIN aim_transfer_history ath ON wpa.wpno_i = ath.source_key_i AND ath.source_type = 'WP' AND ath.success = 'Y'
INNER JOIN aircraft a ON wh.ac_registr = a.ac_registr
LEFT JOIN part p ON wpoo.partno = p.partno
LEFT JOIN rotables r_on ON CONCAT(wpoo.partno, wpoo.serialno) = CONCAT(r_on.partno, r_on.serialno)
LEFT JOIN rotables r_off ON CONCAT(wpoo.partno_off, wpoo.serialno_off) = CONCAT(r_off.partno, r_off.serialno)



WHERE a.status = 0 AND wpoo.labelno IS NUL AND wta.action_date > 17899 
